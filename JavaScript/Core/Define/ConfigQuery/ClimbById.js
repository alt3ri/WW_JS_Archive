
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.configClimbById=void 0;const byte_buffer_1=require("../../../RunTimeLibs/FlatBuffers/byte-buffer"),Stats_1=require("../../Common/Stats"),ConfigCommon_1=require("../../Config/ConfigCommon"),Climb_1=require("../Config/Climb"),DB="db_climb.db",FILE="p.攀爬.xlsx",TABLE="Climb",COMMAND="select BinData from `Climb` where Id=?",KEY_PREFIX="ClimbById",logPair=[["数据库",DB],["文件",FILE],["表名",TABLE],["语句",COMMAND]];let handleId=0;const initStat=void 0,getConfigStat=void 0,CONFIG_STAT_PREFIX="configClimbById.GetConfig(";exports.configClimbById={Init:()=>{handleId=ConfigCommon_1.ConfigCommon.InitDataStatement(handleId,DB,COMMAND)},GetConfig:(o,i=!0)=>{if(e=ConfigCommon_1.ConfigCommon.CheckStatement(handleId,...logPair)){if(i){var n=KEY_PREFIX+`#${o})`;const C=ConfigCommon_1.ConfigCommon.GetConfig(n);if(C)return C}if(e=ConfigCommon_1.ConfigCommon.BindString(handleId,1,o,...logPair)&&0<ConfigCommon_1.ConfigCommon.Step(handleId,!0,...logPair,["Id",o])){var e,n=void 0;if([e,n]=ConfigCommon_1.ConfigCommon.GetValue(handleId,0,...logPair,["Id",o]),e){const C=Climb_1.Climb.getRootAsClimb(new byte_buffer_1.ByteBuffer(new Uint8Array(n.buffer)));return i&&(e=KEY_PREFIX+`#${o})`,ConfigCommon_1.ConfigCommon.SaveConfig(e,C)),ConfigCommon_1.ConfigCommon.Reset(handleId,...logPair),C}}ConfigCommon_1.ConfigCommon.Reset(handleId,...logPair)}}};
//# sourceMappingURL=ClimbById.js.map